// <auto-generated />
using System;
using Gameapp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Gameapp.Migrations
{
    [DbContext(typeof(GamesContext))]
    [Migration("20220727134835_lat")]
    partial class lat
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Gameapp.Models.AddressType", b =>
                {
                    b.Property<int>("AddressTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressType1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("AddressType");

                    b.HasKey("AddressTypeId");

                    b.ToTable("AddressType");
                });

            modelBuilder.Entity("Gameapp.Models.Banner", b =>
                {
                    b.Property<int>("BannerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("EntityId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EntityID");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("OrderIndex")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Pic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SliderTypeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("BannerId");

                    b.HasIndex("CountryId");

                    b.ToTable("Banner");
                });

            modelBuilder.Entity("Gameapp.Models.BestOffer", b =>
                {
                    b.Property<int>("BestOfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Categoryid")
                        .HasColumnType("int")
                        .HasColumnName("categoryid");

                    b.Property<int?>("Discount")
                        .HasColumnType("int");

                    b.Property<int?>("Disscount")
                        .HasColumnType("int");

                    b.Property<bool?>("IsFavourite")
                        .HasColumnType("bit");

                    b.Property<string>("ItemDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ItemPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemPrice")
                        .HasColumnType("int");

                    b.Property<int?>("ShopId")
                        .HasColumnType("int");

                    b.Property<string>("ShopName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShopPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Subcategoryid")
                        .HasColumnType("int");

                    b.HasKey("BestOfferId");

                    b.HasIndex("Categoryid");

                    b.HasIndex(new[] { "ItemId" }, "IX_BestOffer_ItemId");

                    b.HasIndex(new[] { "ShopId" }, "IX_BestOffer_ShopId");

                    b.ToTable("BestOffer");
                });

            modelBuilder.Entity("Gameapp.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryIcon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryPic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryTlar")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CategoryTLAR");

                    b.Property<string>("CategoryTlen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CategoryTLEN");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Gameapp.Models.Champion", b =>
                {
                    b.Property<int>("ChampionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChampTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ChampionContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChampionPic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChampionTlAR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChampionTlEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GameModeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("JoinEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("JoinStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ChampionId");

                    b.HasIndex("ChampTypeId");

                    b.HasIndex("GameModeId");

                    b.ToTable("Champions");
                });

            modelBuilder.Entity("Gameapp.Models.ChampionBanner", b =>
                {
                    b.Property<int>("ChampionBannerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChampionBannerPic")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ChampionBannerID");

                    b.ToTable("ChampionBanners");
                });

            modelBuilder.Entity("Gameapp.Models.ChampionGroup", b =>
                {
                    b.Property<int>("ChampionGroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChampionGroupEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChampionGroupTlAr")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ChampionGroupID");

                    b.ToTable("ChampionGroups");
                });

            modelBuilder.Entity("Gameapp.Models.ChampionGroupList", b =>
                {
                    b.Property<int>("ChampionGroupListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChampionGroupId")
                        .HasColumnType("int");

                    b.Property<int>("ChampionId")
                        .HasColumnType("int");

                    b.HasKey("ChampionGroupListId");

                    b.HasIndex("ChampionGroupId");

                    b.HasIndex("ChampionId");

                    b.ToTable("ChampionGroupLists");
                });

            modelBuilder.Entity("Gameapp.Models.ChampionParticipate", b =>
                {
                    b.Property<int>("ChampionParticipateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChampionId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ParticipStateId")
                        .HasColumnType("int");

                    b.HasKey("ChampionParticipateId");

                    b.HasIndex("ChampionId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ParticipStateId");

                    b.ToTable("ChampionParticipates");
                });

            modelBuilder.Entity("Gameapp.Models.ChampionSchedule", b =>
                {
                    b.Property<int>("ChampionScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChampionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ChampionScheduleDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FirstChampionParticipateId")
                        .HasColumnType("int");

                    b.Property<int>("FirstScore")
                        .HasColumnType("int");

                    b.Property<int>("SecondScore")
                        .HasColumnType("int");

                    b.Property<int>("SecoundChampionParticipateId")
                        .HasColumnType("int");

                    b.HasKey("ChampionScheduleId");

                    b.HasIndex("ChampionId");

                    b.ToTable("ChampionSchedules");
                });

            modelBuilder.Entity("Gameapp.Models.ChampionShip", b =>
                {
                    b.Property<int>("ChampionshipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChampionshipName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ChampionshipPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ChampionshipId");

                    b.ToTable("ChampionShip");
                });

            modelBuilder.Entity("Gameapp.Models.ChampionSlider", b =>
                {
                    b.Property<int>("SliderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActivity")
                        .HasColumnType("bit");

                    b.Property<int>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<int>("SliderTypeId")
                        .HasColumnType("int");

                    b.Property<string>("pic")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SliderId");

                    b.HasIndex("SliderTypeId");

                    b.ToTable("ChampionSliders");
                });

            modelBuilder.Entity("Gameapp.Models.ChampionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChampionType");
                });

            modelBuilder.Entity("Gameapp.Models.Collection", b =>
                {
                    b.Property<int>("CollectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CollectionTitleAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollectionTitleEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Source")
                        .HasColumnType("int");

                    b.HasKey("CollectionId");

                    b.ToTable("Collections");
                });

            modelBuilder.Entity("Gameapp.Models.CollectionItem", b =>
                {
                    b.Property<int>("CollectionItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CollectionId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.HasKey("CollectionItemId");

                    b.HasIndex("CollectionId");

                    b.HasIndex("ItemId");

                    b.ToTable("CollectionItems");
                });

            modelBuilder.Entity("Gameapp.Models.ContactUS", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phonenumber1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phonenumber2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ContactUs");
                });

            modelBuilder.Entity("Gameapp.Models.ContactUsMessages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Msg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tele")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContactUsMessages");
                });

            modelBuilder.Entity("Gameapp.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryTlar")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CountryTLAR");

                    b.Property<string>("CountryTlen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CountryTLEN");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("OrderIndex")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Pic")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("Gameapp.Models.Coupon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Amount")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<int>("CouponTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Serial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Used")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CouponTypeId" }, "IX_Coupon_CouponTypeId");

                    b.ToTable("Coupon");
                });

            modelBuilder.Entity("Gameapp.Models.CouponType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CouponType");
                });

            modelBuilder.Entity("Gameapp.Models.Curreny", b =>
                {
                    b.Property<int>("CurrenyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CurrencyPic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrenyTlar")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CurrenyTLAR");

                    b.Property<string>("CurrenyTlen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CurrenyTLEN");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("CurrenyId");

                    b.ToTable("Curreny");
                });

            modelBuilder.Entity("Gameapp.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomernameAr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CustomernameAR");

                    b.Property<string>("CustomernameEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CustomernameEN");

                    b.Property<string>("Customerphone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FavouriteItem")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Gameapp.Models.CustomerPlatsGamesFavourite", b =>
                {
                    b.Property<int>("CustomerFavouriteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("PlatformGameId")
                        .HasColumnType("int");

                    b.Property<int>("PlatformId")
                        .HasColumnType("int");

                    b.HasKey("CustomerFavouriteId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PlatformGameId");

                    b.HasIndex("PlatformId");

                    b.ToTable("CustomerPlatsGamesFavourite");
                });

            modelBuilder.Entity("Gameapp.Models.FAQ", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("FAQ");
                });

            modelBuilder.Entity("Gameapp.Models.GameMode", b =>
                {
                    b.Property<int>("GamemodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GameModeTLAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameModeTLEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GamemodeId");

                    b.ToTable("GameModes");
                });

            modelBuilder.Entity("Gameapp.Models.Items", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsFavourite")
                        .HasColumnType("bit");

                    b.Property<string>("ItemDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescriptionAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemNameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ItemPrice")
                        .IsRequired()
                        .HasColumnType("decimal(18,0)");

                    b.Property<int?>("OrderIndex")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool?>("OutOfStock")
                        .HasColumnType("bit");

                    b.Property<int?>("ShopId")
                        .HasColumnType("int");

                    b.Property<int?>("SubCategoryId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("ItemId");

                    b.HasIndex("CountryId");

                    b.HasIndex(new[] { "CategoryId" }, "IX_Items_CategoryId");

                    b.HasIndex(new[] { "CustomerId" }, "IX_Items_CustomerId");

                    b.HasIndex(new[] { "ShopId" }, "IX_Items_ShopId");

                    b.HasIndex(new[] { "SubCategoryId" }, "IX_Items_SubCategoryId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Gameapp.Models.ItemsOrderTable2", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ItemId");

                    b.HasIndex(new[] { "ItemId" }, "IX_ItemsOrderTable2_ItemId");

                    b.ToTable("ItemsOrderTable2");
                });

            modelBuilder.Entity("Gameapp.Models.ItemsOrderTb", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ItemId1")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ItemId");

                    b.HasIndex(new[] { "ItemId1" }, "IX_ItemsOrderTb_ItemId1");

                    b.HasIndex(new[] { "OrderId" }, "IX_ItemsOrderTb_OrderId");

                    b.ToTable("ItemsOrderTb");
                });

            modelBuilder.Entity("Gameapp.Models.Newsletter", b =>
                {
                    b.Property<int>("NewsletterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NewsletterID");

                    b.ToTable("Newsletter");
                });

            modelBuilder.Entity("Gameapp.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Auth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("CouponAmount")
                        .HasColumnType("real");

                    b.Property<int?>("CouponId")
                        .HasColumnType("int");

                    b.Property<int?>("CouponTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<float?>("Deliverycost")
                        .HasColumnType("real");

                    b.Property<bool?>("IsDeliverd")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemsItemId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("notes");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("OrderDiscount")
                        .HasColumnType("real");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<float?>("OrderNet")
                        .HasColumnType("real");

                    b.Property<string>("OrderSerial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("OrderTotal")
                        .HasColumnType("real");

                    b.Property<string>("PaymentID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentMehodPaymentMethodId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ref")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShippingAddressId")
                        .HasColumnType("int");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.Property<string>("TrackID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ispaid")
                        .HasColumnType("bit");

                    b.Property<string>("payment_type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderId");

                    b.HasIndex("CouponId");

                    b.HasIndex("CouponTypeId");

                    b.HasIndex("ShippingAddressId");

                    b.HasIndex("ShopId");

                    b.HasIndex(new[] { "CustomerId" }, "IX_Order_CustomerId");

                    b.HasIndex(new[] { "ItemsItemId" }, "IX_Order_ItemsItemId");

                    b.HasIndex(new[] { "PaymentMehodPaymentMethodId" }, "IX_Order_PaymentMehodPaymentMethodId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Gameapp.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<float>("ItemPrice")
                        .HasColumnType("real");

                    b.Property<int>("ItemQuantity")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("Gameapp.Models.PageContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PageContent");
                });

            modelBuilder.Entity("Gameapp.Models.ParticipState", b =>
                {
                    b.Property<int>("ParticipStateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ParticipStateTlAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParticipStateTlEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParticipStateId");

                    b.ToTable("ParticipStates");
                });

            modelBuilder.Entity("Gameapp.Models.PaymentMehod", b =>
                {
                    b.Property<int>("PaymentMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaymentMethodID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PaymentMethodName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaymentMethodPic")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentMethodId");

                    b.ToTable("PaymentMehod");
                });

            modelBuilder.Entity("Gameapp.Models.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AdzBanners")
                        .HasColumnType("bit");

                    b.Property<string>("ArabicTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<bool>("Dashboard")
                        .HasColumnType("bit");

                    b.Property<string>("EnglishTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoOfItems")
                        .HasColumnType("int");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<bool>("Reports")
                        .HasColumnType("bit");

                    b.Property<bool>("VipCollection")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("Gameapp.Models.Platform", b =>
                {
                    b.Property<int>("PlatformId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<string>("PlatformPic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlatformTLAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlatformTLEN")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlatformId");

                    b.ToTable("Platforms");
                });

            modelBuilder.Entity("Gameapp.Models.PlatformGame", b =>
                {
                    b.Property<int>("PlatformGameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GamePic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameTLAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameTLEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<int>("PlatFormId")
                        .HasColumnType("int");

                    b.HasKey("PlatformGameId");

                    b.HasIndex("PlatFormId");

                    b.ToTable("PlatformGames");
                });

            modelBuilder.Entity("Gameapp.Models.ProductImages", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("ItemID");

                    b.HasKey("ImageId");

                    b.HasIndex("ItemId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("Gameapp.Models.PublicDevice", b =>
                {
                    b.Property<int>("PublicDeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("DeviceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAndroiodDevice")
                        .HasColumnType("bit");

                    b.HasKey("PublicDeviceId");

                    b.HasIndex("CountryId");

                    b.ToTable("PublicDevices");
                });

            modelBuilder.Entity("Gameapp.Models.PublicNotification", b =>
                {
                    b.Property<int>("PublicNotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EntityId")
                        .HasColumnType("int");

                    b.Property<int?>("SliderTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PublicNotificationId");

                    b.HasIndex("CountryId");

                    b.HasIndex("SliderTypeId");

                    b.ToTable("PublicNotifications");
                });

            modelBuilder.Entity("Gameapp.Models.PublicNotificationDevice", b =>
                {
                    b.Property<int>("PublicNotificationDeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsRead")
                        .HasColumnType("bit");

                    b.Property<int?>("PublicDeviceId")
                        .HasColumnType("int");

                    b.Property<int>("PublicNotificationId")
                        .HasColumnType("int");

                    b.HasKey("PublicNotificationDeviceId");

                    b.HasIndex("PublicDeviceId");

                    b.HasIndex("PublicNotificationId");

                    b.ToTable("PublicNotificationDevices");
                });

            modelBuilder.Entity("Gameapp.Models.ShippingAddress", b =>
                {
                    b.Property<int>("ShippingAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalDirection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AddressNickname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("AddressTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Area")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Avenue")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Block")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Building")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Floor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Lat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Office")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ShippingAddressId");

                    b.HasIndex(new[] { "AddressTypeId" }, "IX_ShippingAddress_AddressTypeId");

                    b.HasIndex(new[] { "CustomerId" }, "IX_ShippingAddress_CustomerId");

                    b.ToTable("ShippingAddress");
                });

            modelBuilder.Entity("Gameapp.Models.Shop", b =>
                {
                    b.Property<int>("ShopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Banner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<float?>("Deliverycost")
                        .IsRequired()
                        .HasColumnType("real");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrderIndex")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Pic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RegisterDate")
                        .HasColumnType("date");

                    b.Property<string>("ShopNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShopTlar")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ShopTLAR");

                    b.Property<string>("ShopTlen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ShopTLEN");

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Tele")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ShopId");

                    b.HasIndex("CountryId");

                    b.HasIndex(new[] { "SubCategoryId" }, "IX_Shop_SubCategoryId");

                    b.ToTable("Shop");
                });

            modelBuilder.Entity("Gameapp.Models.ShoppingCart", b =>
                {
                    b.Property<int>("ShoppingCartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<float>("Deliverycost")
                        .HasColumnType("real");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<float>("ItemPrice")
                        .HasMaxLength(50)
                        .HasColumnType("real");

                    b.Property<int>("ItemQty")
                        .HasColumnType("int");

                    b.Property<float>("ItemTotal")
                        .HasColumnType("real");

                    b.HasKey("ShoppingCartId");

                    b.HasIndex(new[] { "CustomerId" }, "IX_ShoppingCart_CustomerId");

                    b.HasIndex(new[] { "ItemId" }, "IX_ShoppingCart_ItemId");

                    b.ToTable("ShoppingCart");
                });

            modelBuilder.Entity("Gameapp.Models.Slider", b =>
                {
                    b.Property<int>("SliderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("EntityId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EntityID");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("OrderIndex")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Pic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SliderTypeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("SliderId");

                    b.HasIndex("CountryId");

                    b.HasIndex(new[] { "SliderTypeId" }, "IX_Slider_SliderTypeId");

                    b.ToTable("Slider");
                });

            modelBuilder.Entity("Gameapp.Models.SliderType", b =>
                {
                    b.Property<int>("SliderTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SliderTypeTlar")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SliderTypeTLAR");

                    b.Property<string>("SliderTypeTlen")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SliderTypeTLEN");

                    b.HasKey("SliderTypeId");

                    b.ToTable("SliderType");
                });

            modelBuilder.Entity("Gameapp.Models.SoicialMidiaLink", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Instgramlink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkedInlink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TwitterLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhatsApplink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("facebooklink")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("SoicialMidiaLink");
                });

            modelBuilder.Entity("Gameapp.Models.SubCategory", b =>
                {
                    b.Property<int>("SubCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("OrderIndex")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("SubCategoryPic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCategoryTlar")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SubCategoryTLAR");

                    b.Property<string>("SubCategoryTlen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SubCategoryTLEN");

                    b.HasKey("SubCategoryId");

                    b.HasIndex(new[] { "CategoryId" }, "IX_SubCategory_CategoryId");

                    b.ToTable("SubCategory");
                });

            modelBuilder.Entity("Gameapp.Models.Subscriptions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.HasIndex("ShopId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("Gameapp.Models.WishList", b =>
                {
                    b.Property<int>("WishlistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<int?>("ShopId")
                        .HasColumnType("int");

                    b.HasKey("WishlistId");

                    b.HasIndex("ShopId");

                    b.HasIndex(new[] { "CustomerId" }, "IX_WishList_CustomerId");

                    b.HasIndex(new[] { "ItemId" }, "IX_WishList_ItemId");

                    b.ToTable("WishList");
                });

            modelBuilder.Entity("Gameapp.Models.Banner", b =>
                {
                    b.HasOne("Gameapp.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Gameapp.Models.BestOffer", b =>
                {
                    b.HasOne("Gameapp.Models.Category", "MyProperty")
                        .WithMany()
                        .HasForeignKey("Categoryid");

                    b.HasOne("Gameapp.Models.Items", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId");

                    b.HasOne("Gameapp.Models.Shop", "Shop")
                        .WithMany("BestOffer")
                        .HasForeignKey("ShopId");

                    b.Navigation("Item");

                    b.Navigation("MyProperty");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("Gameapp.Models.Champion", b =>
                {
                    b.HasOne("Gameapp.Models.ChampionType", "ChampionType")
                        .WithMany()
                        .HasForeignKey("ChampTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gameapp.Models.GameMode", "GameMode")
                        .WithMany()
                        .HasForeignKey("GameModeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChampionType");

                    b.Navigation("GameMode");
                });

            modelBuilder.Entity("Gameapp.Models.ChampionGroupList", b =>
                {
                    b.HasOne("Gameapp.Models.ChampionGroup", "ChampionGroup")
                        .WithMany()
                        .HasForeignKey("ChampionGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gameapp.Models.Champion", "champion")
                        .WithMany()
                        .HasForeignKey("ChampionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("champion");

                    b.Navigation("ChampionGroup");
                });

            modelBuilder.Entity("Gameapp.Models.ChampionParticipate", b =>
                {
                    b.HasOne("Gameapp.Models.Champion", "Champion")
                        .WithMany()
                        .HasForeignKey("ChampionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gameapp.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gameapp.Models.ParticipState", "ParticipState")
                        .WithMany()
                        .HasForeignKey("ParticipStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Champion");

                    b.Navigation("Customer");

                    b.Navigation("ParticipState");
                });

            modelBuilder.Entity("Gameapp.Models.ChampionSchedule", b =>
                {
                    b.HasOne("Gameapp.Models.Champion", "champion")
                        .WithMany()
                        .HasForeignKey("ChampionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("champion");
                });

            modelBuilder.Entity("Gameapp.Models.ChampionSlider", b =>
                {
                    b.HasOne("Gameapp.Models.SliderType", "SliderType")
                        .WithMany()
                        .HasForeignKey("SliderTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SliderType");
                });

            modelBuilder.Entity("Gameapp.Models.CollectionItem", b =>
                {
                    b.HasOne("Gameapp.Models.Collection", "Collection")
                        .WithMany()
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gameapp.Models.Items", "Items")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collection");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("Gameapp.Models.Coupon", b =>
                {
                    b.HasOne("Gameapp.Models.CouponType", "CouponType")
                        .WithMany("Coupon")
                        .HasForeignKey("CouponTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CouponType");
                });

            modelBuilder.Entity("Gameapp.Models.CustomerPlatsGamesFavourite", b =>
                {
                    b.HasOne("Gameapp.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gameapp.Models.PlatformGame", "PlatformGame")
                        .WithMany()
                        .HasForeignKey("PlatformGameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gameapp.Models.Platform", "Platform")
                        .WithMany()
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Platform");

                    b.Navigation("PlatformGame");
                });

            modelBuilder.Entity("Gameapp.Models.Items", b =>
                {
                    b.HasOne("Gameapp.Models.Category", "Category")
                        .WithMany("Items")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gameapp.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Gameapp.Models.Customer", "Customer")
                        .WithMany("Items")
                        .HasForeignKey("CustomerId");

                    b.HasOne("Gameapp.Models.Shop", "Shop")
                        .WithMany("Items")
                        .HasForeignKey("ShopId");

                    b.HasOne("Gameapp.Models.SubCategory", "SubCategory")
                        .WithMany("Items")
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Country");

                    b.Navigation("Customer");

                    b.Navigation("Shop");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("Gameapp.Models.ItemsOrderTable2", b =>
                {
                    b.HasOne("Gameapp.Models.Items", "Item")
                        .WithMany("ItemsOrderTable2")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gameapp.Models.Order", "Order")
                        .WithMany("ItemsOrderTable2")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Gameapp.Models.ItemsOrderTb", b =>
                {
                    b.HasOne("Gameapp.Models.Items", "ItemId1Navigation")
                        .WithMany("ItemsOrderTb")
                        .HasForeignKey("ItemId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gameapp.Models.Order", "Order")
                        .WithMany("ItemsOrderTb")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemId1Navigation");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Gameapp.Models.Order", b =>
                {
                    b.HasOne("Gameapp.Models.Coupon", "Coupon")
                        .WithMany()
                        .HasForeignKey("CouponId");

                    b.HasOne("Gameapp.Models.CouponType", "CouponType")
                        .WithMany()
                        .HasForeignKey("CouponTypeId");

                    b.HasOne("Gameapp.Models.Customer", "Customer")
                        .WithMany("Order")
                        .HasForeignKey("CustomerId");

                    b.HasOne("Gameapp.Models.Items", "ItemsItem")
                        .WithMany("Order")
                        .HasForeignKey("ItemsItemId");

                    b.HasOne("Gameapp.Models.PaymentMehod", "PaymentMehodPaymentMethod")
                        .WithMany("Order")
                        .HasForeignKey("PaymentMehodPaymentMethodId");

                    b.HasOne("Gameapp.Models.ShippingAddress", "ShippingAddress")
                        .WithMany()
                        .HasForeignKey("ShippingAddressId");

                    b.HasOne("Gameapp.Models.Shop", "shop")
                        .WithMany()
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coupon");

                    b.Navigation("CouponType");

                    b.Navigation("Customer");

                    b.Navigation("ItemsItem");

                    b.Navigation("PaymentMehodPaymentMethod");

                    b.Navigation("ShippingAddress");

                    b.Navigation("shop");
                });

            modelBuilder.Entity("Gameapp.Models.OrderItem", b =>
                {
                    b.HasOne("Gameapp.Models.Items", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gameapp.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Gameapp.Models.Plan", b =>
                {
                    b.HasOne("Gameapp.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Gameapp.Models.PlatformGame", b =>
                {
                    b.HasOne("Gameapp.Models.Platform", "platform")
                        .WithMany()
                        .HasForeignKey("PlatFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("platform");
                });

            modelBuilder.Entity("Gameapp.Models.ProductImages", b =>
                {
                    b.HasOne("Gameapp.Models.Items", "Item")
                        .WithMany("ProductImages")
                        .HasForeignKey("ItemId");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Gameapp.Models.PublicDevice", b =>
                {
                    b.HasOne("Gameapp.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Gameapp.Models.PublicNotification", b =>
                {
                    b.HasOne("Gameapp.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gameapp.Models.SliderType", "SliderType")
                        .WithMany()
                        .HasForeignKey("SliderTypeId");

                    b.Navigation("Country");

                    b.Navigation("SliderType");
                });

            modelBuilder.Entity("Gameapp.Models.PublicNotificationDevice", b =>
                {
                    b.HasOne("Gameapp.Models.PublicDevice", "PublicDevice")
                        .WithMany("PublicNotificationDevice")
                        .HasForeignKey("PublicDeviceId");

                    b.HasOne("Gameapp.Models.PublicNotification", "PublicNotification")
                        .WithMany("PublicNotificationDevice")
                        .HasForeignKey("PublicNotificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PublicDevice");

                    b.Navigation("PublicNotification");
                });

            modelBuilder.Entity("Gameapp.Models.ShippingAddress", b =>
                {
                    b.HasOne("Gameapp.Models.AddressType", "AddressType")
                        .WithMany("ShippingAddress")
                        .HasForeignKey("AddressTypeId");

                    b.HasOne("Gameapp.Models.Customer", "Customer")
                        .WithMany("ShippingAddress")
                        .HasForeignKey("CustomerId");

                    b.Navigation("AddressType");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Gameapp.Models.Shop", b =>
                {
                    b.HasOne("Gameapp.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Gameapp.Models.SubCategory", "SubCategory")
                        .WithMany("Shop")
                        .HasForeignKey("SubCategoryId");

                    b.Navigation("Country");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("Gameapp.Models.ShoppingCart", b =>
                {
                    b.HasOne("Gameapp.Models.Customer", "Customer")
                        .WithMany("ShoppingCart")
                        .HasForeignKey("CustomerId");

                    b.HasOne("Gameapp.Models.Items", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId");

                    b.Navigation("Customer");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Gameapp.Models.Slider", b =>
                {
                    b.HasOne("Gameapp.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Gameapp.Models.SliderType", "SliderType")
                        .WithMany("Slider")
                        .HasForeignKey("SliderTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("SliderType");
                });

            modelBuilder.Entity("Gameapp.Models.SubCategory", b =>
                {
                    b.HasOne("Gameapp.Models.Category", "Category")
                        .WithMany("SubCategory")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Gameapp.Models.Subscriptions", b =>
                {
                    b.HasOne("Gameapp.Models.Plan", "Plan")
                        .WithMany()
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gameapp.Models.Shop", "Shop")
                        .WithMany("Subscriptions")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plan");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("Gameapp.Models.WishList", b =>
                {
                    b.HasOne("Gameapp.Models.Customer", "Customer")
                        .WithMany("WishList")
                        .HasForeignKey("CustomerId");

                    b.HasOne("Gameapp.Models.Items", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId");

                    b.HasOne("Gameapp.Models.Shop", "Shop")
                        .WithMany("WishList")
                        .HasForeignKey("ShopId");

                    b.Navigation("Customer");

                    b.Navigation("Item");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("Gameapp.Models.AddressType", b =>
                {
                    b.Navigation("ShippingAddress");
                });

            modelBuilder.Entity("Gameapp.Models.Category", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("Gameapp.Models.CouponType", b =>
                {
                    b.Navigation("Coupon");
                });

            modelBuilder.Entity("Gameapp.Models.Customer", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Order");

                    b.Navigation("ShippingAddress");

                    b.Navigation("ShoppingCart");

                    b.Navigation("WishList");
                });

            modelBuilder.Entity("Gameapp.Models.Items", b =>
                {
                    b.Navigation("ItemsOrderTable2");

                    b.Navigation("ItemsOrderTb");

                    b.Navigation("Order");

                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("Gameapp.Models.Order", b =>
                {
                    b.Navigation("ItemsOrderTable2");

                    b.Navigation("ItemsOrderTb");
                });

            modelBuilder.Entity("Gameapp.Models.PaymentMehod", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("Gameapp.Models.PublicDevice", b =>
                {
                    b.Navigation("PublicNotificationDevice");
                });

            modelBuilder.Entity("Gameapp.Models.PublicNotification", b =>
                {
                    b.Navigation("PublicNotificationDevice");
                });

            modelBuilder.Entity("Gameapp.Models.Shop", b =>
                {
                    b.Navigation("BestOffer");

                    b.Navigation("Items");

                    b.Navigation("Subscriptions");

                    b.Navigation("WishList");
                });

            modelBuilder.Entity("Gameapp.Models.SliderType", b =>
                {
                    b.Navigation("Slider");
                });

            modelBuilder.Entity("Gameapp.Models.SubCategory", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Shop");
                });
#pragma warning restore 612, 618
        }
    }
}
