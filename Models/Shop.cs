// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

#nullable disable

namespace Gameapp.Models
{
    [Index(nameof(SubCategoryId), Name = "IX_Shop_SubCategoryId")]
    public partial class Shop
    {
        public Shop()
        {
            BestOffer = new HashSet<BestOffer>();
            Items = new HashSet<Items>();
            WishList = new HashSet<WishList>();
        }

        [Key]
        public int ShopId { get; set; }
        [Column("ShopTLAR")]
        [StringLength(50)]
        [Required]
        public string ShopTlar { get; set; }
        [Column("ShopTLEN")]
        [StringLength(50)]
        [Required]

        public string ShopTlen { get; set; }
        [StringLength(50)]
        [Required]

        public string Tele { get; set; }
        [StringLength(50)]
        [Required]

        public string Mobile { get; set; }
        [StringLength(50)]
        [Required]

        public string Address { get; set; }
        [StringLength(50)]

        public string ShopNo { get; set; }
        public bool? IsActive { get; set; }

        [Required]
        public int? OrderIndex { get; set; }


        public int? CountryId { get; set; }

        [ForeignKey("CountryId")]
        public Country Country { get; set; }

        
        public string Banner { get; set; }

        public string Pic { get; set; }
        //[Column(TypeName = "date")]
        public DateTime? RegisterDate { get; set; }
        public int? SubCategoryId { get; set; }


        [ForeignKey(nameof(SubCategoryId))]
        [InverseProperty("Shop")]
        public virtual SubCategory SubCategory { get; set; }
        [InverseProperty("Shop")]
        public virtual ICollection<BestOffer> BestOffer { get; set; }
        [InverseProperty("Shop")]
        public virtual ICollection<Items> Items { get; set; }
        [InverseProperty("Shop")]
        public virtual ICollection<WishList> WishList { get; set; }

        [Required]
        [Range(0, float.MaxValue)]
        public float? Deliverycost { get; set; }


        [NotMapped]
        [Required]

        public string Email { get; set; }

        [NotMapped]
        public string UserName { get; set; }

        [NotMapped]
        public string Password { get; set; }

        public virtual ICollection<Subscriptions> Subscriptions { get; set; }
    }
}