@page
@model Gameapp.Areas.Admin.Pages.HomeSliders.EditModel
@{
}


<div class="card">
    <div class="card-header d-flex justify-content-between">
        <h3 style="margin-top:9px; color:#4b49ac"> @sharedResource["Edit"]  @sharedResource["HomeSlider"]</h3>
        <a asp-page="Index" class="btn btn-primary"> @sharedResource["Back"]</a>

    </div>
    <div class="form_inside" style="padding-top:20px;padding-left:20px;padding-right:20px">

        <form id="form" method="post" enctype="multipart/form-data">
            @Html.Hidden("ItemId", "")
            @Html.Hidden("ChampionId", "")
            @Html.Hidden("ShopId", "")
            @(Html.DevExtreme().Form<Gameapp.Models.Slider>
            ()

            .ID("HomeSliderForm")
            .OnInitialized("onFormInitialized")


            .FormData(Model.slider)

            .Items(items => {


            items.AddSimpleFor(m => m.SliderTypeId).IsRequired(true).Label(k => k.Text(sharedResource["Type"]))
            .Editor(e => e
            .Lookup()
            .DataSource(ds => ds.WebApi().Controller("Sliderss").LoadAction("SliderTypeLookup").Key("Value"))
            .ValueExpr("Value")
            .DisplayExpr("Text")
             .Placeholder(sharedResource["Select"])
                                                        .ShowClearButton(true)
                                                        .ClearButtonText(sharedResource["Clear"])
                                                        .CancelButtonText(sharedResource["Cancel"])
                                                        .SearchPlaceholder(sharedResource["searching"])
            .OnValueChanged("onValueChanged")
            ).IsRequired(true);

            items.AddSimple()
            .Editor(e => e
            .Lookup()
            .DataSource(ds => ds.WebApi().Controller("Sliderss").LoadAction("ChampionLookup").Key("Value"))
            .DisplayExpr("Text")
            .ValueExpr("Value")
             .Placeholder(sharedResource["Select"])
                                                        .ShowClearButton(true)
                                                        .ClearButtonText(sharedResource["Clear"])
                                                        .CancelButtonText(sharedResource["Cancel"])
                                                        .SearchPlaceholder(sharedResource["searching"])
            .Value(Model.ChampionId)
            .OnSelectionChanged("ChampionValueChanged")

            ).Label(k => k.Text(sharedResource["Champion"])).Name("Champion").Visible(false).IsRequired(true);



            items.AddSimple()
            .Editor(e => e
            .Lookup()
            .DataSource(ds => ds.WebApi().Controller("Sliderss").LoadAction("ItemLookup").Key("Value"))
            .ValueExpr("Value")
            .DisplayExpr("Text")
             .Placeholder(sharedResource["Select"])
                                                        .ShowClearButton(true)
                                                        .ClearButtonText(sharedResource["Clear"])
                                                        .CancelButtonText(sharedResource["Cancel"])
                                                        .SearchPlaceholder(sharedResource["searching"])
            .Value(Model.ItemId)
            .OnSelectionChanged("ItemValueChanged")


            ).Label(k => k.Text(sharedResource["Item"])).Visible(false).Name("Item").IsRequired(true);
            items.AddSimple()
            .Editor(e => e
            .Lookup()
            .DataSource(ds => ds.WebApi().Controller("Sliderss").LoadAction("ShopLookup").Key("Value"))
            .ValueExpr("Value")
            .DisplayExpr("Text")
             .Placeholder(sharedResource["Select"])
                                                        .ShowClearButton(true)
                                                        .ClearButtonText(sharedResource["Clear"])
                                                        .CancelButtonText(sharedResource["Cancel"])
                                                        .SearchPlaceholder(sharedResource["searching"])
            .Value(Model.ShopId)
            .OnSelectionChanged("ShopValueChanged")
            ).Label(k => k.Text(sharedResource["Shop"])).Visible(false).Name("Shop").IsRequired(true);


             items.AddSimpleFor(s => s.CountryId)
            .Editor(e => e
            .Lookup()
            .DataSource(ds => ds.WebApi().Controller("Shops").LoadAction("CountryLookup").Key("Value"))
            .DisplayExpr("Text")
            .ValueExpr("Value")
             .Placeholder(sharedResource["Select "])
                                                        .ShowClearButton(true)
                                                        .ClearButtonText(sharedResource["Clear"])
                                                        .CancelButtonText(sharedResource["Cancel"])
                                                        .SearchPlaceholder(sharedResource["searching"])

            ).Label(k => k.Text(sharedResource["Country"])).Visible(true).Name("CountryId").IsRequired(true);


            items.AddSimpleFor(m => m.EntityId).Visible(false).IsRequired(false).Name("URL").Label(k => k.Text(sharedResource["ExternalURL"])).IsRequired(true);
            items.AddSimpleFor(m => m.OrderIndex).Label(k => k.Text(sharedResource["Sort"])).IsRequired(true);
            items.AddSimpleFor(m => m.IsActive).Label(k => k.Text(sharedResource["Active"]));


            items.AddSimple().Label(k => k.Text(sharedResource["Picture"])).Template(@<text>
                    <div>
                        <img width="250" height="250" src="/Images/@Model.slider.Pic" alt="Slider Picture" />
                    </div>
                </text> );
            items.AddSimpleFor(m => m.Pic).Label(k => k.Text(sharedResource["Change_Picture"])).Template(@<text>
                    @(Html.DevExtreme().FileUploader()
                .Name("Photo")
                .SelectButtonText(sharedResource["Change_Picture"])
                .LabelText("")
                .Accept("image/*")
                .UploadMode(FileUploadMode.UseForm)
                .Height(70)
                    )

                </text> );
            items.AddButton()
            .ColSpan(3)
            .HorizontalAlignment(HorizontalAlignment.Left)
            .ButtonOptions(b => b.Text(sharedResource["Save"])
            .Type(ButtonType.Success)
            .UseSubmitBehavior(true)).CssClass("invers");



            })
            )

        </form>
    </div>
</div>
<script>
    var form
    function onFormInitialized(e) {

        form = e.component;
         var sliderTypeId =@Model.slider.SliderTypeId;

        if (sliderTypeId === 1) {
            //item
            form.itemOption("Item", "visible", true);
            form.itemOption("Champion", "visible", false);
            form.itemOption("Shop", "visible", false);
            form.itemOption("URL", "visible", false);
            $("#ItemId").val(@Model.EntityId);

        }
        if (sliderTypeId === 2) {
            //shop

            form.itemOption("Item", "visible", false);
            form.itemOption("Shop", "visible", true);
            form.itemOption("Champion", "visible", false);
            form.itemOption("URL", "visible", false);
            $("#ShopId").val(@Model.EntityId);

        }

        if (sliderTypeId=== 3) {
            //Champion
            form.itemOption("Item", "visible", false);
            form.itemOption("Shop", "visible", false);
            form.itemOption("Champion", "visible", true);
            form.itemOption("URL", "visible", false);
            $("#ChampionId").val(@Model.EntityId);

        }
        if (sliderTypeId=== 4) {
            //nothing
            form.itemOption("Item", "visible", false);
            form.itemOption("Champion", "visible", false);
            form.itemOption("Shop", "visible", false);
            form.itemOption("URL", "visible", false);
        }
        if (sliderTypeId=== 5)
        {
            //URL
            form.itemOption("Item", "visible", false);
            form.itemOption("Champion", "visible", false);
            form.itemOption("Shop", "visible", false);
            form.itemOption("URL", "visible", true);
        }
    }

    function ChampionValueChanged(data) {
        if (data.selectedItem != null) {
            $("#ChampionId").val(data.selectedItem.Value);
        }

    }

    function ItemValueChanged(data) {
        if (data.selectedItem != null) {
            $("#ItemId").val(data.selectedItem.Value);
        }
    }
    function ShopValueChanged(data) {
        if (data.selectedItem != null) {
            $("#ShopId").val(data.selectedItem.Value);
        }
    }

    function onValueChanged(e) {

        if (e.value === 1) {
            //item
            form.itemOption("Item", "visible", true);
            form.itemOption("Champion", "visible", false);
            form.itemOption("Shop", "visible", false);
            form.itemOption("URL", "visible", false);
        }
        if (e.value === 2) {
            //shop

            form.itemOption("Item", "visible", false);
            form.itemOption("Shop", "visible", true);
            form.itemOption("Champion", "visible", false);
            form.itemOption("URL", "visible", false);
        }

        if (e.value === 3) {
            //shop
            form.itemOption("Item", "visible", false);
            form.itemOption("Shop", "visible", false);
            form.itemOption("Champion", "visible", true);
            form.itemOption("URL", "visible", false);
        }
        if (e.value === 4) {
            //nothing
            form.itemOption("Item", "visible", false);
            form.itemOption("Champion", "visible", false);
            form.itemOption("Shop", "visible", false);
            form.itemOption("URL", "visible", false);
        }
        if (e.value === 5) {
            //URL
            form.itemOption("Item", "visible", false);
            form.itemOption("Champion", "visible", false);
            form.itemOption("Shop", "visible", false);
            form.itemOption("URL", "visible", true);
        }


    }

</script>