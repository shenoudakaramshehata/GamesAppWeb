@page
@{
    ViewData["Title"] = "List";
    Layout = "~/Areas/Admin/Pages/Shared/_Layout.cshtml";
    ViewData["active"] = "active";

}

<div class="card">
    <div class="card-header d-flex justify-content-between">
        <h3 style="margin-top:9px; color:#4b49ac">@sharedResource["SubscriptionsList"]  </h3>
        @*        <a class="btn btn-info" style="background-color:#4b49ac !important; border:none" href="/Admin/plans/list">@sharedResource["Back"]</a>
        *@
    </div>
    <div style="padding-top:20px;padding-left:20px;padding-right:20px">

        @(Html.DevExtreme().DataGrid<Gameapp.Models.Subscriptions>()
        .DataSource(ds => ds.Mvc()
        .Controller("Subscriptions")
        .LoadAction("Get")
        .Key("Id")
       
        )
        .RemoteOperations(true)
        .Columns(columns => {

        columns.AddFor(m => m.ShopId).Lookup(lookup => lookup
        .DataSource(ds => ds.WebApi().Controller("Subscriptions").LoadAction("ShopLookup").Key("Value"))
        .ValueExpr("Value")
        .DisplayExpr("Text")
        ).Caption(sharedResource["Shop"]);

        columns.AddFor(m => m.PlanId).Lookup(lookup => lookup
        .DataSource(ds => ds.WebApi().Controller("Subscriptions").LoadAction("PlansLookup").Key("Value"))
        .ValueExpr("Value")
        .DisplayExpr("Text")
        ).Caption(sharedResource["Plan"]);


        columns.AddFor(m => m.StartDate).Caption(sharedResource["StartDate"]);

        columns.AddFor(m => m.EndDate).Caption(sharedResource["EndDate"]);

        columns.AddFor(m => m.Active).Caption(sharedResource["Active"]);

        
                 columns.Add().Caption(sharedResource["Actions"]).Alignment(HorizontalAlignment.Center).CellTemplate(@<text>
        <a href="/Admin/subscriptions/Details?id=<%- data.Id %>">@sharedResource["Details"] </a>
        </text>);


        }).Editing(e => e.Mode(GridEditMode.Popup)
    .AllowAdding(false)
        .AllowUpdating(false)
        .AllowDeleting(false)
        .Popup(p => p
        .Title("Plan Info")
        .ShowTitle(true)
        .Width(600)
        .Height(400)
        )
        )
        .Paging(paging => paging.PageSize(10))
        .Pager(pager =>
        {
        pager.Visible(true);
        pager.DisplayMode(GridPagerDisplayMode.Full);
        pager.ShowPageSizeSelector(true);
        pager.AllowedPageSizes(new JS("[5, 10, 'all']"));
        pager.ShowInfo(true);
        pager.ShowNavigationButtons(true);
        })
        .ShowBorders(true)
        .FilterRow(filterRow => filterRow
        .Visible(true)
        .ApplyFilter(GridApplyFilterMode.Auto)
        )
        .SearchPanel(searchPanel => searchPanel
        .Visible(true)
        .Width(240)
        .Placeholder(sharedResource["SearchTxt"])
        )
        .HeaderFilter(headerFilter => headerFilter.Visible(true)).ShowColumnLines(true)
        .ShowRowLines(true)
        .RowAlternationEnabled(true)
     .RtlEnabled(bool.Parse(sharedResource["ArLang"]))
        )


    </div>
</div>