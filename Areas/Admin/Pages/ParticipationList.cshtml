@page
@model Gameapp.Areas.Admin.Pages.ParticipationListModel
@{
     
}

   




<div class="page-content">
    <div class="container-fluid">

        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h2 class="card-header d-flex justify-content-between align-items-center">
                            @sharedResource["Participants"]
                        </h2>
                         <p class="mt-2">
                            @sharedResource["You Can Update In Score Of Participant in List"]
                        </p>
                    </div>
                    <div class="card-body">




                        @(Html.DevExtreme().DataGrid<Gameapp.Models.ChampionParticipate>()
        .DataSource(ds => ds.Mvc()
        .Controller("ChampionParticipates")
        .LoadAction("Get")
        .InsertAction("Post")
        .UpdateAction("PutAddScore")
        .DeleteAction("Delete")
        .LoadParams(new { ChampionId = Model.ChampionP.ChampionId})
        .Key("ChampionParticipateId")
                        )
    .Editing(editing =>
    {
        editing.Mode(GridEditMode.Cell);
        editing.AllowUpdating(true);
       
    })
                        .Columns(columns => {
                        columns.AddFor(m => m.Customer.CustomernameEn).Caption(sharedResource["Subscriber Name"]).AllowEditing(false);
                        columns.AddFor(m => m.Customer.CustomerEmail).Caption(sharedResource["Subscriber Email"]).AllowEditing(false);
                        columns.AddFor(m => m.Customer.Customerphone).Caption(sharedResource["Subscriber Phone"]).AllowEditing(false);
                        columns.AddFor(m => m.Champion.ChampionTlAR).Caption(sharedResource["Champion Name"]).AllowEditing(false);

                        columns.AddFor(m => m.JoinDate).Caption(sharedResource["Join Date"]).AllowEditing(false);
                        columns.AddFor(m => m.Score).Caption(sharedResource["Score"]);
                      

                        })
                          .Paging(paging => paging.PageSize(10))
                        .Pager(pager =>
                        {
                            pager.Visible(true);
                            pager.DisplayMode(GridPagerDisplayMode.Full);
                            pager.ShowPageSizeSelector(true);
                            pager.AllowedPageSizes(new JS("[5, 10, 'all']"));
                            pager.ShowInfo(true);
                            pager.ShowNavigationButtons(true);

                        })
                        .HeaderFilter(headerFilter => headerFilter.Visible(true)).ShowColumnLines(true)
                        .ShowRowLines(true)
                        .RowAlternationEnabled(true)
                        .AllowColumnReordering(true)
                        .ShowRowLines(true)
                        .ShowBorders(true)
                        .SearchPanel(searchPanel => searchPanel
                        .Visible(true)
                        .Width(280)
                        .Placeholder(sharedResource["SearchTxt"]))
                        .RemoteOperations(true)
                        .RtlEnabled(bool.Parse(sharedResource["ArLang"]))
                                        )

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
