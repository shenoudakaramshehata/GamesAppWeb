@page
@model Gameapp.Areas.Shop.Pages.FinancialDashboardModel
@{
}




@using Gameapp.Models
@using Microsoft.AspNetCore.Identity
@inject Gameapp.Data.ApplicationDbContext db
@inject Gameapp.Data.GamesContext _context
@inject UserManager<ApplicationUser> _userManager

<link rel="stylesheet" href="~/lib/font-awesome/css/all.min.css" />

<div class="main-panel">
    <div class="content-wrapper">
        <div class="row">
            <div class="col-md-12 grid-margin">
                      <div class="row welcome_message_conatiner">
                    <div class="col-12 col-xl-8 mb-4 mb-xl-0 ">
                        <h3 class="font-weight-bold">@sharedResource["Welcome"] @User.Identity.Name</h3>
                        <h6 style="color:gray"> @sharedResource["Financial"]  </h6>
                    </div>
                    <div class="col-12 col-xl-4 box">
                        <div class="justify-content-end d-flex">
                            <div class="dropdown flex-md-grow-1 flex-xl-grow-0">
                                <button class="btn btn-sm btn-light bg-white dropdown-toggle" type="button" id="dropdownMenuDate2" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                    <i class="mdi mdi-calendar"></i> @sharedResource["Dashboard"]
                                </button>
                                <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuDate2">
                                    <a class="dropdown-item" href="/shop/index"> @sharedResource["Statistics"] </a>
                                    <a class="dropdown-item" href="/shop/FinancialDashboard"> @sharedResource["Financial"]  dashboard </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            
  <div class="col-md-6 mb-4 stretch-card transparent">
                <div class="card card-dark-blue">
                    <div class="card-body">
                        <i class="fas fa-shopping-basket" style="text-align: center;display: block;font-size: 31px;margin-bottom: 10px;"></i>
                        <h4 class="mb-4 text-center">@sharedResource["Total Orders"] </h4>
                        <p class="fs-30 mb-2 text-center">@_context.Order.Where(s => s.ShopId == _userManager.GetUserAsync(User).Result.EntityId).Count()</p>
                    </div>
                </div>
            </div>


            <div class="col-md-6 mb-4 stretch-card transparent">
                <div class="card card-tale">
                    <div class="card-body">
                        <i class="fas fa-money-check-alt" style="text-align: center;display: block;font-size: 31px;margin-bottom: 10px;"></i>
                        <h4 class="mb-4 text-center"> @sharedResource["Total Revenue"]  </h4>
                        <p class="fs-30 mb-2 text-center">@_context.Order.Where(s => s.ShopId == _userManager.GetUserAsync(User).Result.EntityId).Sum( o => o.OrderNet ) KD</p>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <p class="card-title">@sharedResource["Top Ten Items Report"] </p>
                        </div>
                        <p class="font-weight-500" style="margin-bottom: 20px;">@sharedResource["Best selling product in terms of revenue"]  </p>

                        @(Html.DevExtreme().Chart()
                        .ID("TopItemsChart")
                        .Series(s => s
                        .Add()
                        .ArgumentField("Day")
                        .ValueField("Oranges")
                        .Name("Orders Count Per Clients")
                        .Type(SeriesType.Bar)
                        .Label(l => l.Visible(true))
                        .Color("#4b49ac")
                        .ShowInLegend(false)
                        )
                        .DataSource(ds => ds.Mvc()
                        .Controller("Statistics")
                        .LoadAction("GetTopTenItemsRevenueForShop")
                        )
                        )


                    </div>
                </div>
            </div>
       
        </div>

        <div class="row">
            <div class="col-md-6 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <p class="card-title">@sharedResource["Top Ten Categories Report"] </p>
                        </div>
                        <p class="font-weight-500" style="margin-bottom: 20px;"> @sharedResource["The best categories in terms of Revenue"] </p>

                        @(Html.DevExtreme().Chart()
                        .ID("TopTenCategories")
                        .Series(s => s
                        .Add()
                        .ArgumentField("Day")
                        .ValueField("Oranges")
                        .Name("Orders Count Per Clients")
                        .Type(SeriesType.Bar)
                        .Label(l => l.Visible(true))
                        .Color("#f3797e")
                        .ShowInLegend(false)
                        )
                        .DataSource(ds => ds.Mvc()
                        .Controller("Statistics")
                        .LoadAction("GetTopCategoriesRevenueForShop")
                        )
                        )


                    </div>
                </div>
            </div>
            <div class="col-md-6 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <p class="card-title">@sharedResource["Top Ten Subcategories Report"] </p>
                        </div>
                        <p class="font-weight-500" style="margin-bottom: 20px;"> @sharedResource["The best subcategories in terms of revenue"]  </p>

                        @(Html.DevExtreme().Chart()
                        .ID("TopTenSubCategories")
                        .Series(s => s
                        .Add()
                        .ArgumentField("Day")
                        .ValueField("Oranges")
                        .Name("Orders Count Per Clients")
                        .Type(SeriesType.Bar)
                        .Label(l => l.Visible(true))
                        .Color("#7da0fa")
                        .ShowInLegend(false)
                        )
                        .DataSource(ds => ds.Mvc()
                        .Controller("Statistics")
                        .LoadAction("GetTopSubCategoriesRevenueForShop")
                        )
                        )


                    </div>
                </div>
            </div>
        </div>


        <div class="row">
            <div class="col-md-12 grid-margin stretch-card">
                <div class="card position-relative">
                    <div class="card-body">
                        <div id="detailedReports" class="carousel slide detailed-report-carousel position-static pt-2" data-ride="carousel">
                            <div class="carousel-inner">
                                <div class="carousel-item active">
                                    <div class="row">
                                        <div class="col-xl-6">
                                            @(Html.DevExtreme().Chart()
                                            .ID("DailyOrdersCount")
                                            .Rotated(true)
                                            .DataSource("https://" + @HttpContext.Request.Host.Value.ToString() + "/api/statistics/GetDailyRevenueForShop")
                                            .Series(s => s.Add()
                                            .Label(l => l
                                            .Visible(true)
                                            .BackgroundColor("#c18e92")

                                            )
                                            .Color("#79cac4")
                                            .Type(SeriesType.Bar)
                                            .ArgumentField("day")
                                            .ValueField("sales")
                                            )
                                            .Title(@sharedResource["Revenue Per Day"] )
                                            .ArgumentAxis(a => a
                                            .Label(l => l
                                            .CustomizeText(@<text>
                                                    function() {
                                                    return this.valueText;
                                                    }
                                                </text>)
                                            )
                                            )
                                            .ValueAxis(a => a.Add()
                                            .Tick(t => t.Visible(false))
                                            .Label(l => l.Visible(false))
                                            )
                                            .Export(e => e.Enabled(true))
                                            .Legend(l => l.Visible(false))
                                            .ScrollBar(s => s.Visible(true))
                                            .ZoomAndPan(z => z.ArgumentAxis(ChartZoomAndPanMode.Both))
                                            )
                                        </div>


                                        <div class="col-xl-6">
                                            @(Html.DevExtreme().Chart()
                                            .ID("MonthlyOrderCount")
                                            .Rotated(true)
                                            .DataSource("https://" + @HttpContext.Request.Host.Value.ToString() + "/api/statistics/GetMonthlyRevenueForShop")
                                            .Series(s => s.Add()
                                            .Label(l => l
                                            .Visible(true)
                                            .BackgroundColor("#c18e92")
                                            )
                                            .Color("#79cac4")
                                            .Type(SeriesType.Bar)
                                            .ArgumentField("day")
                                            .ValueField("sales")
                                            )
                                            .Title(@sharedResource["Revenue Per Month"])
                                            .ArgumentAxis(a => a
                                            .Label(l => l
                                            .CustomizeText(@<text>
                                                    function() {
                                                    return "Month " + this.valueText;
                                                    }
                                                </text>)
                                            )
                                            )
                                            .ValueAxis(a => a.Add()
                                            .Tick(t => t.Visible(false))
                                            .Label(l => l.Visible(false))
                                            )
                                            .Export(e => e.Enabled(true))
                                            .Legend(l => l.Visible(false))
                                            .ScrollBar(s => s.Visible(true))
                                            .ZoomAndPan(z => z.ArgumentAxis(ChartZoomAndPanMode.Both))
                                            )
                                        </div>
                                    </div>
                                </div>

                            </div>



                        </div>

                    </div>

                </div>
            </div>
        </div>


        <div class="row">
            <div class="col-md-12 grid-margin stretch-card">
                <div class="card position-relative">
                    <div class="card-body">
                        <div id="detailedReports" class="carousel slide detailed-report-carousel position-static pt-2" data-ride="carousel">
                            <div class="carousel-inner">
                                <div class="carousel-item active">
                                    <div class="row">
                                        <div class="col-xl-12">
                                            @(Html.DevExtreme().Chart()
                                            .ID("OrderCountPerYear")
                                            .Palette(VizPalette.Soft)
                                            .CommonSeriesSettings(s => s
                                            .ArgumentField("age")
                                            .ValueField("number")
                                            .Type(SeriesType.Bar)
                                            .Label(l => l.Visible(true))
                                            .IgnoreEmptyPoints(true)

                                            )
                                            .Title(t => t
                                            .Text(@sharedResource["Revenue Per Year"] )
                                            )
                                            .SeriesTemplate(t => t.NameField("age"))
                                            .DataSource(ds => ds.Mvc()
                                            .Controller("Statistics")
                                            .LoadAction("GetYealyRevenueForShop"))
                                            .ZoomAndPan(z => z.ArgumentAxis(ChartZoomAndPanMode.Both))
                                            )


                                        </div>


                                    </div>
                                </div>

                            </div>



                        </div>

                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

